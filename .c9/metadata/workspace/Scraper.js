{"changed":true,"filter":false,"title":"Scraper.js","tooltip":"/Scraper.js","value":"var http = require('http');\nvar cheerio = require('cheerio');\nvar util = require('util');\nvar EventEmitter = require('events').EventEmitter;\nvar STATUS_CODES = http.STATUS_CODES;\n/*\n * Scraper Constructor\n **/\nfunction Scraper(url, type) {\n    this.url = url;\n    this.fixtures = [];\n    this.init();\n    this.type = type;\n  }\n  /*\n   * Make it an EventEmitter\n   **/\nutil.inherits(Scraper, EventEmitter);\n\nScraper.prototype.init = function() {\n  //var fixtures;\n  var self = this;\n  self.on('loaded', function(html) {\n    console.log('self.on(loaded)' + '\\n');\n    self.fixtures = self.parsePage(html);\n    self.emit('complete', self.fixtures);\n  });\n  self.loadWebPage();\n};\nScraper.prototype.loadWebPage = function() {\n  var self = this;\n  console.log('loading web page');\n  http.get(self.url, function(res) {\n      var body = '';\n      if (res.statusCode !== 200) {\n        console.log(\"'self.emit('error')\");\n        return self.emit('error', STATUS_CODES[res.statusCode]);\n        //self.emit('error', STATUS_CODES[res.statusCode]);\n      }\n      res.on('data', function(chunk) {\n        body += chunk;\n      });\n      res.on('end', function() {\n        console.log(\"res.on('end')\");\n        self.emit('loaded', body);\n      });\n    })\n    .on('error', function(err) {\n      self.emit('error', err);\n    });\n};\n/*\n * Parse html and return an object\n **/\nScraper.prototype.parsePage = function(data) {\n  var self = this;\n  console.log(\"parsePage\");\n  var jsonObject = JSON.parse(data);\n  var html = jsonObject.commands[0].parameters.content;\n  //console.log('Html \\n'+html);\n  //console.log(data);\n  var lists = [];\n  var $ = cheerio.load(html);\n  if (self.type == 'matches') {\n    lists = parseMatches($);\n  }\n  if (self.type == 'seasons') {\n    lists = parseSeasons($);\n  }\n\n  return lists;\n};\n\nfunction parseMatches($) {\n  var lists = [];\n  $('table.matches tbody tr').each(function(i, prod) {\n    var teamA = $('td.team.team-a', this).text();\n    var league = 'Bundesliga';\n    var teamB = $('td.team.team-b', this).text();\n    var score = $('td.score-time.score', this).text().trim().split('-');\n    var homeScore = score[0].trim();\n    var awayScore = score[1].trim();\n    var season = 2014;\n    var week = 15;\n    var json = {\n\n      teamA: teamA,\n      teamB: teamB,\n      homeScore: homeScore,\n      awayScore: awayScore,\n      season: season,\n      week: week,\n      league: league\n    }\n    lists.push(json);\n  });\n  return lists;\n}\n\nfunction parseSeasons($) {\n  var lists = [];\n  $('div#subheading').each(function(i, prod) {\n    console.log('founded');\n    /*\n    var teamA = $('td.team.team-a', this).text();\n    var league = 'Bundesliga';\n    var teamB = $('td.team.team-b', this).text();\n    var score = $('td.score-time.score', this).text().trim().split('-');\n    var homeScore = score[0].trim();\n    var awayScore = score[1].trim();\n    var season = 2014;\n    var week = 15;\n    var json = {\n\n      teamA: teamA,\n      teamB: teamB,\n      homeScore: homeScore,\n      awayScore: awayScore,\n      season: season,\n      week: week,\n      league: league\n    }\n    lists.push(json);\n    */\n  });\n  return lists;\n}\nmodule.exports = Scraper;","undoManager":{"mark":-1,"position":2,"stack":[[{"group":"doc","deltas":[{"start":{"row":66,"column":2},"end":{"row":66,"column":4},"action":"remove","lines":["  "]},{"start":{"row":69,"column":0},"end":{"row":69,"column":2},"action":"remove","lines":["  "]},{"start":{"row":97,"column":1},"end":{"row":98,"column":0},"action":"insert","lines":["",""]}]}],[{"group":"doc","deltas":[{"start":{"row":13,"column":0},"end":{"row":13,"column":2},"action":"remove","lines":["  "]}]}],[{"group":"doc","deltas":[{"start":{"row":13,"column":0},"end":{"row":13,"column":2},"action":"insert","lines":["  "]}]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":19,"column":3},"end":{"row":19,"column":3},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1418874356265}